Test report ADVANCED LEVEL
--------------------------

BASIC LEVEL ENDPOINTS:


---> listSpecies endpoint

* TEST 1: When it works perfectly with an introduced limit:
  --------------------------------------------------------

  * Input:

http:// localhost:8080/listSpecies?limit=10

  * Output:

<!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>List of species</title>
      </head>
      <body style="background-color: palegreen;">
      <p>The total number of species available in Ensembl is: 310</p>
      <p>The limit you have selected is: 4</p>
      <p>The list with the names of the species is the following:</p>
        <p>-little spotted kiwi<br /> -Indian glassy fish<br /> -blue tit<br /> -narwhal</p>
        <a href="/">Main page</a>
      </body>
    </html>

 * TEST 2: When a limit is not introduced:
   --------------------------------------

   * Input:

 http:// localhost:8080/listSpecies?limit=

   * Output:

 {
     'ERROR': 'endpoint arguments are not correct for this endpoint (Check you introduced a limit also!'
 }

* TEST 3: When you introduce limit 0:
  ----------------------------------

   * Input:

 http:// localhost:8080/listSpecies?limit=0

   * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>List of species</title>
      </head>
      <body style="background-color: palegreen;">
      <p>The total number of species available in Ensembl is: 310</p>
      <p>The limit you have selected is: 0</p>
      <p>The list with the names of the species is the following: </p>
     <p> -little spotted kiwi<br /> -Indian glassy fish<br /> -blue tit<br /> -narwhal<br /> -American beaver<br /> -lumpfish<br /> -Chinese hamster<br /> -channel bull blenny<br /> -Golden Hamster<br /> -wild yak<br /> -Siamese fighting fish<br /> -eastern happy<br /> -cape rock hyrax<br /> -Eurasian eagle-owl<br /> -Japanese quail<br /> -fugu<br /> -Asian bonytongue<br /> -blue-ringed sea krait<br /> -mouse<br /> -Agassiz's desert tortoise<br /> -lyretail cichlid<br /> -coho salmon<br /> -Oriental scops-owl<br /> -zebra mbuna<br /> -Arctic ground squirrel<br /> -clown anemonefish<br /> -koala<br /> -algerian mouse<br /> -sheep<br /> -mouse<br /> -dog<br /> -Spoon-billed sandpiper<br /> -Northern American deer mouse<br /> -burrowing owl<br /> -baker's yeast<br /> -Spotted gar<br /> -steppe mouse<br /> -Canada lynx<br /> -Polar bear<br /> -Amazon molly<br /> -tongue sole<br /> -platypus<br /> -Common snapping turtle<br /> -Western painted turtle<br /> -gray short-tailed opossum<br /> -Golden snub-nosed monkey<br /> -helmeted guineafowl<br /> -golden-line barbel<br /> -Sea squirt Ciona savignyi<br /> -Western Lowland Gorilla<br /> -northern pike<br /> -swamp eel<br /> -Indian peafowl<br /> -barramundi perch<br /> -meerkat<br /> -Chinese medaka<br /> -pig<br /> -Makobe Island cichlid<br /> -reedfish<br /> -Ryukyu mouse<br /> -red fox<br /> -tammar wallaby<br /> -central bearded dragon<br /> -vaquita<br /> -White-headed capuchin<br /> -alpaca<br /> -small Madagascar hedgehog<br /> -Angola colobus<br /> -Pig-tailed macaque<br /> -cattle<br /> -orbiculate cardinalfish<br /> -Eastern spot-billed duck<br /> -common carp hebao red<br /> -yellowtail amberjack<br /> -Brazilian guinea pig<br /> -Mexican tetra<br /> -ruff<br /> -domestic yak<br /> -zebra finch<br /> -Black snub-nosed monkey<br /> -Bengalese finch<br /> -Damara mole rat<br /> -Japanese medaka HdrR<br /> -Budgie<br /> -Philippine tarsier<br /> -Chacoan peccary<br /> -southern platyfish<br /> -common mallard<br /> -Swainson's thrush<br /> -elephant shark<br /> -turquoise killifish<br /> -pig<br /> -Ugandan red Colobus<br /> -pig<br /> -lion<br /> -Lesser Egyptian jerboa<br /> -three-spined stickleback<br /> -domestic guinea pig<br /> -dingo<br /> -Daurian ground squirrel<br /> -dog<br /> -Three-toed box turtle<br /> -Tasmanian devil<br /> -Siberian musk deer<br /> -pig<br /> -mouse<br /> -Indian medaka<br /> -mouse<br /> -domestic cat<br /> -Chinese hamster<br /> -Norway rat<br /> -Alpine marmot<br /> -Goat<br /> -medium ground-finch<br /> -Shrew mouse<br /> -large flying fox<br /> -Bornean orangutan<br /> -Atlantic salmon<br /> -Sooty mangabey<br /> -chicken<br /> -green anole<br /> -Argentine black and white tegu<br /> -Degu<br /> -Indian cobra<br /> -Drill<br /> -C.elegans<br /> -white-tufted-ear marmoset<br /> -Goodes thornscrub tortoise<br /> -rufous-capped babbler<br /> -pink-footed goose<br /> -pig<br /> -Upper Galilee mountains blind mole rat<br /> -bicolor damselfish<br /> -live sharksucker<br /> -Coquerel's sifaka<br /> -bottlenosed dolphin<br /> -mouse<br /> -northern tree shrew<br /> -Atlantic herring<br /> -greater horseshoe bat<br /> -Gouldian finch<br /> -Sea squirt Ciona intestinalis<br /> -blue tilapia<br /> -tropical clawed frog<br /> -california sea lion<br /> -dog<br /> -muscovy Duck (domestic type)<br /> -mouse<br /> -goat<br /> -human<br /> -Great spotted kiwi<br /> -ocean sunfish<br /> -Bolivian squirrel monkey<br /> -Chinook salmon<br /> -zig-zag eel<br /> -naked mole-rat<br /> -turkey<br /> -nine-banded armadillo<br /> -Paramormyrops kingsleyae<br /> -guppy<br /> -sea lamprey<br /> -hybrid cattle<br /> -Hoffmann's two-fingered sloth<br /> -huchen<br /> -rainbow trout<br /> -large yellow croaker<br /> -Asiatic black bear<br /> -pig<br /> -blue-crowned manakin<br /> -javanese ricefish<br /> -swan goose<br /> -blunt-snouted clingfish<br /> -African ostrich<br /> -common carp<br /> -turbot<br /> -western European hedgehog<br /> -Olive baboon<br /> -western mosquitofish<br /> -Long-tailed chinchilla<br /> -Inshore hagfish<br /> -Macaque<br /> -vole<br /> -Atlantic cod<br /> -little brown bat<br /> -pike-perch<br /> -Midas cichlid<br /> -gray mouse lemur<br /> -beluga whale<br /> -mouse<br /> -dark-eyed junco<br /> -Domestic ferret<br /> -blind barbel<br /> -emu<br /> -Collared flycatcher<br /> -Ma's night monkey<br /> -mallard<br /> -silver-eye<br /> -eastern brown snake<br /> -Tiger<br /> -pig<br /> -common canary<br /> -tiger tail seahorse<br /> -mouse<br /> -greater bamboo lemur<br /> -West African mud turtle<br /> -Japanese medaka HSOK<br /> -brown trout<br /> -tuatara<br /> -pig<br /> -European shrew<br /> -sperm whale<br /> -European seabass<br /> -pinecone soldierfish<br /> -pig<br /> -American black bear<br /> -sheepshead minnow<br /> -Great Tit<br /> -thirteen-lined ground squirrel<br /> -sailfin molly<br /> -mouse<br /> -common wombat<br /> -mouse<br /> -Eurasian sparrowhawk<br /> -mouse<br /> -horned golden-line barbel<br /> -Mongolian gerbil<br /> -naked mole-rat<br /> -jewelled blenny<br /> -New Caledonian crow<br /> -American mink<br /> -eastern buzzard<br /> -Australian saltwater crocodile<br /> -chimpanzee<br /> -horse<br /> -common wall lizard<br /> -Kakapo<br /> -Abingdon island giant tortoise<br /> -pig<br /> -golden pheasant<br /> -hybrid cattle<br /> -mouse<br /> -Chinese softshell turtle<br /> -gilthead seabream<br /> -Okarito brown kiwi<br /> -mangrove rivulus<br /> -gelada<br /> -Leishan spiny toad<br /> -Ord's kangaroo rat<br /> -superb fairywren<br /> -Pachon cavefish<br /> -mouse<br /> -white-throated sparrow<br /> -common carp huanghe<br /> -donkey<br /> -golden eagle<br /> -red-bellied piranha<br /> -African savanna elephant<br /> -pig<br /> -giant panda<br /> -ballan wrasse<br /> -Eurasian red squirrel<br /> -Arabian camel<br /> -bonobo<br /> -Ring-necked pheasant<br /> -small-eared galago<br /> -Nile tilapia<br /> -common carp german mirror<br /> -orange clownfish<br /> -common kestrel<br /> -pig<br /> -coelacanth<br /> -goldfish<br /> -Periophthalmus magnuspinnatus<br /> -northern spotted owl<br /> -shortfin molly<br /> -Crab-eating macaque<br /> -American bison<br /> -Yarkand deer<br /> -electric eel<br /> -climbing perch<br /> -rabbit<br /> -mouse<br /> -Northern white-cheeked gibbon<br /> -Monterrey platyfish<br /> -mouse<br /> -round goby<br /> -yellow-billed parrot<br /> -mainland tiger snake<br /> -Chinese hamster<br /> -American pika<br /> -mouse<br /> -channel catfish<br /> -Japanese medaka HNI<br /> -zebrafis<br /> -small tree finch<br /> -golden-collared manakin<br /> -fruit fly<br /> -Chilean tinamou<br /> -Blue whale<br /> -spiny chromis<br /> -African green monkey<br /> -Burton's mouthbrooder<br /> -denticle herring<br /> -leopard<br /> -spotted green pufferfish<br /> -sheep<br /> -mummichog<br /> -pig<br /> -Komodo dragon<br /> -greater amberjack</p>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 4: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

  * Input:

 http:// localhost:8080/listSpecies?lemit=3

  * Output:

 {
     "ERROR": "endpoint arguments are not correct for this endpoint (Check you introduced a limit also!"
 }




---> karyotype endpoint

* TEST 1: When it works perfectly with an introduced species:
  ----------------------------------------------------------

  * Input:

 http:// localhost:8080/karyotype?species=mouse

  * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>karyotype by species</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Selected species: mouse</p>
      <p>Information requested: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', 'X', 'Y', 'MT']</p>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 2: When the introduced species does not exist/ its karyotype is not registered in Ensembl:
  ----------------------------------------------------------------------------------------------

  * Input:

 http:// localhost:8080/karyotype?species=hello

  * Output:

  <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>karyotype by species</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Selected species: hello</p>
      <p>Information requested:  karyotype not available for that species </p>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 3: When no species is introduced:
  -------------------------------------

   * Input:

 http:// localhost:8080/karyotype?species=

   * Output:

 {
     "ERROR": "endpoint arguments are not correct for this endpoint. Check you have provided the name of a species"
 }

* TEST 4: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

   * Input:

 http:// localhost:8080/karyotype?speces=mouse

   * Output:

 {
     "ERROR": "endpoint arguments are not correct for this endpoint. Check you have provided the name of a species"
 }




---> chromosome_length endpoint

* TEST 1: When it works perfectly with introduced both species and chromosome:
  ---------------------------------------------------------------------------

   * Input:

 http://localhost:8080/chromosome_length?species=mouse&length=18

   * Output:

   <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>Chromosome length</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Species chosen: mouse</p>
      <p>The length of the chromosome is: 90720763</p>
      <a href="/">Main page</a>
      </body>
    </html>

* TEST 2: When you provide it a species but not the number of the chromosome:
  --------------------------------------------------------------------------

  * Input:

 http://localhost:8080/chromosome_length?species=mouse&length=

  * Output:

 {
     "ERROR": "You missed the number of chromosome you want to check"
 }

* TEST 3: When you provide it the name of the chromosome but not the name of the species you wanna check:
  ------------------------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/chromosome_length?species=&length=18

  * Output:

 {
     "ERROR": "You missed the name of the species you want to check"
 }

* TEST 4: When you do not provide any species nor chromosome name:
  ---------------------------------------------------------------

  * Input:

 http://localhost:8080/chromosome_length?species=&length=

  * Output:

 {"
     ERROR": "You missed the name of the species and the name of the chromosome you want to check"
 }

* TEST 5: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

   * Input:

 http:// localhost:8080/chromosome_length?species=mouse&lenght=18

   * Output:

 {
     "ERROR": "You missed the number of chromosome you want to check"
 }     ---> This happens because it stops in the error in which no chromosome is provided, as it does not detect any 'length' provided.

 The same happens in case we write the word 'species' wrong:

 {
     "ERROR": "You missed the name of the species you want to check"
 }     ---> For the same reason as before.




---> No endpoint provided:

 In the case you do not provide an endpoint, you are directly sent to the main page (index). Then:

  * Input:

 http:// localhost:8080/

  * Output:

 <!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Welcome!</title>
  </head>
  <body style="background-color: powderblue;">
  <body>
    <h1>Browsing Human and Vertebrates genome</h1>
    <h1>BASIC Level Services</h1>

    <p>1) List of species in the genome database</p>

    <form action="listSpecies" method="get">
        Limit: <input type="text" name="limit">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>
    <p>2) Information about the karyotype: </p>
    <form action="karyotype" method="get">
        Select the species: <input type="text" name="species">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>
    <p>3) Chromosome Length</p>
    <form action="chromosome_length" method="get">
        Select the species: <input type="text" name="species">

        <br><br>
        Select a chromosome: <input type="text" name="length">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>
    <h1>MEDIUM Level Services</h1>

    <p>4) Gene sequence</p>
    <form action="geneSeq" method="get">
        Select a human gene: <input type="text" name="gene_name">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>
    <p>5) Information about a Human gene</p>
    <form action="geneInfo" method="get">
        Select a human gene: <input type="text" name="gene_name">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>
    <p>6) Calculations about a Human gene</p>
    <form action="geneCalc" method="get">
        Select a human gene: <input type="text" name="gene_name">

        <br><br>
        <input type="submit" value="Send">
    </form>

    <hr>

  </body>
</html>

MEDIUM LEVEL ENDPOINTS:

---> geneSeq endpoint

* TEST 1: When it works perfectly with an introduced human gene:
  -------------------------------------------------------------

  * Input:

 http://localhost:8080/geneSeq?gene_name=FRAT1

  * Output:

 <!DOCTYPE html>
     <html lang="en" dir="ltr">
       <head>
         <meta charset="utf-8">
         <title>gene sequence</title>
       </head>
       <body style="background-color: palegreen;">
       <p>Gene name: FRAT1</p>
       <p>Gene sequence:</p>
       <p>CGGCTCCCGCGGCTGCAGGCGCGCGGCTAGAGTGCCTGGCGGGCTCCGGCTTCCGCGTCCGCCCCGGCCCCGGTCCAGACTTAGTCTTCAGCTCCGCGCCCGCTCCGCCGCGGCCCACCGCGCCCGCCGGCAGCCGAGCCCCCAGCGACGCCCGCACAGCTCCGGGTGCCCAGACAGGGGGCCATGCCGTGCCGGAGGGAGGAGGAAGAGGAAGCCGGCGAGGAGGCGGAGGGGGAGGAAGAGGAGGAGGACAGCTTCCTCCTACTGCAGCAGTCAGTGGCGCTGGGCAGCTCGGGCGAGGTGGACCGGCTGGTGGCCCAGATCGGCGAGACGCTGCAGCTGGACGCGGCGCAGCACAGCCCGGCCTCGCCGTGCGGGCCCCCGGGGGCGCCGCTGCGGGCCCCGGGGCCCCTGGCTGCGGCGGTGCCGGCGGACAAGGCCAGGTCCCCGGCGGTGCCGCTGCTGCTGCCGCCCGCGTTGGCGGAGACTGTGGGCCCGGCGCCCCCTGGGGTCCTGCGCTGCGCCCTGGGGGACCGCGGCCGCGTGCGGGGCCGCGCTGCGCCCTACTGCGTGGCCGAGCTCGCCACAGGCCCCAGCGCGCTGTCCCCACTGCCCCCTCAGGCCGACCTTGATGGGCCTCCGGGAGCTGGCAAGCAGGGCATCCCGCAGCCGCTGTCGGGTCCGTGCCGGCGAGGATGGCTCCGGGGCGCCGCCGCCTCCCGCCGCCTGCAGCAGCGACGCGGGTCCCAACCAGAAACCCGCACAGGCGACGACGACCCGCACCGGCTTCTGCAGCAGCTAGTGCTCTCTGGAAACCTCATCAAGGAGGCCGTGCGAAGGCTTCATTCGCGACGGCTGCAGTTACGTGCAAAGCTTCCCCAACGCCCGCTCCTGGGACCTCTGTCGGCCCCGGTGCATGAACCCCCTTCGCCTCGCAGCCCTCGCGCGGCCTGCAGTGACCCTGGCGCCTCCGGGAGGGCGCAGCTCAGAACTGGCGACGGCGTTCTTGTGCCTGGCAGCTAACACGCCCGGGGTGGCCACAGCGCCAGCCTCAGACTGGAGGGCAAGGGGTTCCCTTGAGGGCTGCAGTTCTACTCAGGCTGGTGGAGAACTCTGGCTTTTGGAAGCGAGAGTAAAAAGCTAATGACGAGGAACCGAAAAATCGCGAGTGTTTCGCGGGTAACTGGGGTTGAGGGCCAAAATATTTGGAATGAAGGACTTTGGCCCTATTTAAGGCAGATTTTACAGAGCGCACCTCAAACGTACAAGTCAGTAGGACTCCTTATTTGGCGTGACCCGACCTGGCCGCGGAGCCTGCATTTCCTCGCAGCCTCTCAGTGCCCTCCAGCCCCGCGACCATGTGGCCACAATCCACGCTTCTCCGGATCGCGGTGCGCCGGAACCACGGAGGATGATGCCAGTTACTTGCTTTACCTTTTCAGGGCTGGCTCCTGATCCACTTTGGGGGAGGAGAACATGAGTAGATAATTTCAGGGTGCAGCCCAATCTGCCAGACTTAAAAAAACCATCTTGTGTCTTTGGAGGTGCTGCTTAATACCAAACATGCGGTGCCATGAAGGGACCCTTTGGGGGTTGAATAGGAGTTAACCCCTGCGCTCTCTTTGCAACTGTCTCTCTTCTCAGAGTGGTGGGGGAAGGCTGTACGACACGGGTGGGGAAAGGAGGTGGGGGCGGGGAGTATTGAATGGTGGTGGAAGGGTAGAGAGGCGCGGAGTGAACCCCACGCCCTGTCTAAAGTGTATTTTCAGAGCCGGCCCGCCTCTCCTCGGTTCAAGGTCACTGTTTCCTGGGCACGCACTGGGTTGCGGGACAGAGTAGCCAGGTTCTGCCGGTGCTCGGAGAAGAGCGCAGTGTTTTGCAAGTGCTGGAGTCTCCTGAGGACACGCGCGTCGCCGCCACCGCGGGTGTGGGAAAGCGCGGACGTGCTGGGCGGCTGTGCTTCGGTAGGCGACCACCGCCCCTGGCCGCGCTCCGGGCTTTCACGGAAACTCCCGAGACCGGGCCCTGGGTTCCTCCTCTCCTACTCGGCTCTGCAGTCCTACTCAAGCGGGTGGCTCTGGGATCCTGGGGGCCTGGGTTGGGGGCTAGGGAGACGCCATGTGATGGACACTCCAGGGACACACAGCCTAGCACAGCAGCTTATAATGGGCTCTCCGGGGCCATTTGCAATAACAGCTGCAATTCCCTGGATAGACGAGTTGATTTCCTCCCTCTGCCCCTCCCCCAGCCATGCCAGCTGGCCTTTGTAAGTGCAGGAAACCGAGTAGAAAATGTGACCCTCCAAATGGAGAAGCTGCAGGCTTTGCCATTGTGAACCATGGTGAAGTGCTTGGAACATACTGTTCACTCACTCTAAAGGCGCTGAGACTGTGCTGTTGTTCTCGTTTTTATAGTCAATGGCTTGTTCATCATCCAGATGTGGCTACTGACATATCTACACTTCGCACCGGAGTGTCTGGAATTGTGGCTATCCTGATTATAGGATTTTAACTTAACTGAAATGCCTGCTTTGAATAAATGTGTTGGGTTTTTTGTTTGGTTTTATTTTATACTTGCCATCAGTGAAAAAGATGTACAGAACACATTTCTCTGATCTCCATAAACATGAAAACACTTGAAATCTC</p>
         <a href="/">Main page</a>
       </body>
     </html>

* TEST 2: When no gene is introduced:
  --------------------------------------

  * Input:

 http://localhost:8080/geneSeq?gene_name=

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }

* TEST 3: When the gene introduced isn't available in the dictionary of genes we are using:
  ----------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/geneSeq?gene_name=HELLO

  * Output:

  <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>gene sequence</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Gene name: HELLO</p>
      <p>Gene sequence:</p>
      <p>{"error":"ID 'NONE' not found"}</p>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 4: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/geneSeq?genename=HELLO

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }      ---> The same as before happens because it does not detect any 'gene_name' provided and it does not reach the error for the case of wrong characters, ...



 ---> geneInfo endpoint

* TEST 1: When it works perfectly with an introduced human gene:
  -------------------------------------------------------------

  * Input:

 http://localhost:8080/geneInfo?gene_name=FRAT1

 * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>Gene info</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Gene name: FRAT1</p>
      <p>Human gene id: ENSG00000165879</p>
      <p>Length human gene: 2645</p>
      <p>Gene start: 97319271</p>
      <p>Gene end: 97321915 </p>
      <p>Chromosome name: GRCh38</p>
      <br>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 2: When no human gene is introduced:
  ----------------------------------------

  * Input:

 http://localhost:8080/geneInfo?gene_name=

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }

* TEST 3: When the gene introduced isn't available in the dictionary of genes we are using:
  ----------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/geneInfo?gene_name=HELLO

 * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>Green server</title>
      </head>
      <body style="background-color: red;">
        <h1>ERROR</h1>
        <P>Resource not available</P>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 4: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

  * Input:

    http://localhost:8080/geneInfo?gene_namme=FRAT1

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }      ---> The same as before happens because it does not detect any 'gene_name' provided and it does not reach the error for the case of wrong characters, ...



  ---> geneCalc endpoint

* TEST 1: When it works perfectly with an introduced human gene:
  -------------------------------------------------------------

  * Input:

 http://localhost:8080/geneCalc?gene_name=FRAT1

  * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>Gene calculations</title>
      </head>
      <body style="background-color: palegreen;">
      <p>Gene name: FRAT1</p>
      <p>Total length gene: 2645</p>
      <p>Percentages bases: {'A': '18.03%', 'C': '30.21%', 'G': '32.1%', 'T': '19.66%'}</p>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 2: When no human gene is introduced:
  ----------------------------------------

  * Input:

 http://localhost:8080/geneCalc?gene_name=

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }

* TEST 3: When the gene introduced isn't available in the dictionary of genes we are using:
  ----------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/geneCalc?gene_name=HELLO

 * Output:

 <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <title>Green server</title>
      </head>
      <body style="background-color: red;">
        <h1>ERROR</h1>
        <P>Resource not available</P>
        <a href="/">Main page</a>
      </body>
    </html>

* TEST 4: When you introduce a wrong parameter/ you miss one letter/ you confuse any character when writing manually the path in the browser.
  ------------------------------------------------------------------------------------------------------------------------------------------

  * Input:

 http://localhost:8080/geneCalc?genname=FRAT1

  * Output:

 {
     "ERROR": "You must introduce a gene name"
 }      ---> The same as before happens because it does not detect any 'gene_name' provided and it does not reach the error for the case of wrong characters, ...


ADVANCED LEVEL IMPLEMENTATIONS:

 In this level, I have implemented my program so that you can obtain the json when writing json=1 in several options:

 1) Requesting it in the browser adding 'json=1' in the parameters:
    This way the json is obtained in the browser, but it is also printed in the terminal.
 2) Using the 'client.py' created:
    This way the json dictionaries are obtained in the terminal.

    TEST OF ALL THE ENDPOINTS WHEN WORKING PROPERLY:
                              ---------------------

 * TEST OF THE 1st ENDPOINT (listSpecies) when working properly:

 1)   INPUT: http://localhost:8080/listSpecies?limit=10&json=1
      OUTPUT IN BROWSER:
 {
    "limit": "10",
    "len_species": 310,
    "list_species": [
        "little spotted kiwi",
        "Indian glassy fish",
        "blue tit",
        "narwhal",
        "American beaver",
        "lumpfish",
        "Chinese hamster",
        "channel bull blenny",
        "Golden Hamster",
        "wild yak"
    ]
 }
      OUTPUT IN TERMINAL: The requested json is the following: {"limit": "10", "len_species": 310, "list_species": ["little spotted kiwi", "Indian glassy fish", "blue tit", "narwhal", "American beaver", "lumpfish", "Chinese hamster", "channel bull blenny", "Golden Hamster", "wild yak"]}

 2)   We run the client.
      OUTPUT IN TERMINAL:

 /listSpecies
 Response received!:  200 OK
 {
     "len_species": 310,
     "limit": "10",
     "list_species": [
         "little spotted kiwi",
         "Indian glassy fish",
         "blue tit",
         "narwhal",
         "American beaver",
         "lumpfish",
         "Chinese hamster",
         "channel bull blenny",
         "Golden Hamster",
         "wild yak"
     ]
 }



 * TEST OF THE 2nd ENDPOINT (karyotype) when working properly:

 1)   INPUT: http://localhost:8080/karyotype?species=mouse&json=1
      OUTPUT IN BROWSER:
      {
          "karyotype": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "X",
              "Y",
              "MT"
          ],
          "species": "mouse"
      }

      OUTPUT IN TERMINAL: The requested json is the following: (identical json to the previous one but printed in terminal).

2)   We run the client.
      OUTPUT IN TERMINAL:

 /karyotype
 Response received!:  200 OK
 {
     "karyotype": [
         "1",
         "2",
         "3",
         "4",
         "5",
         "6",
         "7",
         "8",
         "9",
         "10",
         "11",
         "12",
         "13",
         "14",
         "15",
         "16",
         "17",
         "18",
         "19",
         "X",
         "Y",
         "MT"
     ],
     "species": "mouse"
 }



 * TEST OF THE 3rd ENDPOINT (chromosome_length) when working properly:

 1)   INPUT: http://localhost:8080/chromosome_length?species=mouse&length=18&json=1
      OUTPUT IN BROWSER:
 {
      "length_chromosome": 90720763,
      "species": "mouse"
 }

      OUTPUT IN TERMINAL: The requested json is the following: (identical json to the previous one but printed in terminal).


 2)   We run the client.
      OUTPUT IN TERMINAL:

 /chromosome_length
 Response received!:  200 OK
 {
     "length_chromosome": 90720763,
     "species": "mouse"
 }



* TEST OF THE 4th ENDPOINT (geneSeq) when working properly:
 1)   INPUT: http://localhost:8080/geneSeq?gene_name=FRAT1&json=1
      OUTPUT IN BROWSER:

 {
    "gene_name": "FRAT1",
    "sequence": "CGGCTCCCGCGGCTGCAGGCGCGCGGCTAGAGTGCCTGGCGGGCTCCGGCTTCCGCGTCCGCCCCGGCCCCGGTCCAGACTTAGTCTTCAGCTCCGCGCCCGCTCCGCCGCGGCCCACCGCGCCCGCCGGCAGCCGAGCCCCCAGCGACGCCCGCACAGCTCCGGGTGCCCAGACAGGGGGCCATGCCGTGCCGGAGGGAGGAGGAAGAGGAAGCCGGCGAGGAGGCGGAGGGGGAGGAAGAGGAGGAGGACAGCTTCCTCCTACTGCAGCAGTCAGTGGCGCTGGGCAGCTCGGGCGAGGTGGACCGGCTGGTGGCCCAGATCGGCGAGACGCTGCAGCTGGACGCGGCGCAGCACAGCCCGGCCTCGCCGTGCGGGCCCCCGGGGGCGCCGCTGCGGGCCCCGGGGCCCCTGGCTGCGGCGGTGCCGGCGGACAAGGCCAGGTCCCCGGCGGTGCCGCTGCTGCTGCCGCCCGCGTTGGCGGAGACTGTGGGCCCGGCGCCCCCTGGGGTCCTGCGCTGCGCCCTGGGGGACCGCGGCCGCGTGCGGGGCCGCGCTGCGCCCTACTGCGTGGCCGAGCTCGCCACAGGCCCCAGCGCGCTGTCCCCACTGCCCCCTCAGGCCGACCTTGATGGGCCTCCGGGAGCTGGCAAGCAGGGCATCCCGCAGCCGCTGTCGGGTCCGTGCCGGCGAGGATGGCTCCGGGGCGCCGCCGCCTCCCGCCGCCTGCAGCAGCGACGCGGGTCCCAACCAGAAACCCGCACAGGCGACGACGACCCGCACCGGCTTCTGCAGCAGCTAGTGCTCTCTGGAAACCTCATCAAGGAGGCCGTGCGAAGGCTTCATTCGCGACGGCTGCAGTTACGTGCAAAGCTTCCCCAACGCCCGCTCCTGGGACCTCTGTCGGCCCCGGTGCATGAACCCCCTTCGCCTCGCAGCCCTCGCGCGGCCTGCAGTGACCCTGGCGCCTCCGGGAGGGCGCAGCTCAGAACTGGCGACGGCGTTCTTGTGCCTGGCAGCTAACACGCCCGGGGTGGCCACAGCGCCAGCCTCAGACTGGAGGGCAAGGGGTTCCCTTGAGGGCTGCAGTTCTACTCAGGCTGGTGGAGAACTCTGGCTTTTGGAAGCGAGAGTAAAAAGCTAATGACGAGGAACCGAAAAATCGCGAGTGTTTCGCGGGTAACTGGGGTTGAGGGCCAAAATATTTGGAATGAAGGACTTTGGCCCTATTTAAGGCAGATTTTACAGAGCGCACCTCAAACGTACAAGTCAGTAGGACTCCTTATTTGGCGTGACCCGACCTGGCCGCGGAGCCTGCATTTCCTCGCAGCCTCTCAGTGCCCTCCAGCCCCGCGACCATGTGGCCACAATCCACGCTTCTCCGGATCGCGGTGCGCCGGAACCACGGAGGATGATGCCAGTTACTTGCTTTACCTTTTCAGGGCTGGCTCCTGATCCACTTTGGGGGAGGAGAACATGAGTAGATAATTTCAGGGTGCAGCCCAATCTGCCAGACTTAAAAAAACCATCTTGTGTCTTTGGAGGTGCTGCTTAATACCAAACATGCGGTGCCATGAAGGGACCCTTTGGGGGTTGAATAGGAGTTAACCCCTGCGCTCTCTTTGCAACTGTCTCTCTTCTCAGAGTGGTGGGGGAAGGCTGTACGACACGGGTGGGGAAAGGAGGTGGGGGCGGGGAGTATTGAATGGTGGTGGAAGGGTAGAGAGGCGCGGAGTGAACCCCACGCCCTGTCTAAAGTGTATTTTCAGAGCCGGCCCGCCTCTCCTCGGTTCAAGGTCACTGTTTCCTGGGCACGCACTGGGTTGCGGGACAGAGTAGCCAGGTTCTGCCGGTGCTCGGAGAAGAGCGCAGTGTTTTGCAAGTGCTGGAGTCTCCTGAGGACACGCGCGTCGCCGCCACCGCGGGTGTGGGAAAGCGCGGACGTGCTGGGCGGCTGTGCTTCGGTAGGCGACCACCGCCCCTGGCCGCGCTCCGGGCTTTCACGGAAACTCCCGAGACCGGGCCCTGGGTTCCTCCTCTCCTACTCGGCTCTGCAGTCCTACTCAAGCGGGTGGCTCTGGGATCCTGGGGGCCTGGGTTGGGGGCTAGGGAGACGCCATGTGATGGACACTCCAGGGACACACAGCCTAGCACAGCAGCTTATAATGGGCTCTCCGGGGCCATTTGCAATAACAGCTGCAATTCCCTGGATAGACGAGTTGATTTCCTCCCTCTGCCCCTCCCCCAGCCATGCCAGCTGGCCTTTGTAAGTGCAGGAAACCGAGTAGAAAATGTGACCCTCCAAATGGAGAAGCTGCAGGCTTTGCCATTGTGAACCATGGTGAAGTGCTTGGAACATACTGTTCACTCACTCTAAAGGCGCTGAGACTGTGCTGTTGTTCTCGTTTTTATAGTCAATGGCTTGTTCATCATCCAGATGTGGCTACTGACATATCTACACTTCGCACCGGAGTGTCTGGAATTGTGGCTATCCTGATTATAGGATTTTAACTTAACTGAAATGCCTGCTTTGAATAAATGTGTTGGGTTTTTTGTTTGGTTTTATTTTATACTTGCCATCAGTGAAAAAGATGTACAGAACACATTTCTCTGATCTCCATAAACATGAAAACACTTGAAATCTC"
 }

      OUTPUT IN TERMINAL: The requested json is the following: (identical json to the previous one but printed in terminal).

 2)   We run the client.
      OUTPUT IN TERMINAL:

 /geneSeq
 Response received!:  200 OK
 {
     "gene_name": "FRAT1",
     "sequence": "CGGCTCCCGCGGCTGCAGGCGCGCGGCTAGAGTGCCTGGCGGGCTCCGGCTTCCGCGTCCGCCCCGGCCCCGGTCCAGACTTAGTCTTCAGCTCCGCGCCCGCTCCGCCGCGGCCCACCGCGCCCGCCGGCAGCCGAGCCCCCAGCGACGCCCGCACAGCTCCGGGTGCCCAGACAGGGGGCCATGCCGTGCCGGAGGGAGGAGGAAGAGGAAGCCGGCGAGGAGGCGGAGGGGGAGGAAGAGGAGGAGGACAGCTTCCTCCTACTGCAGCAGTCAGTGGCGCTGGGCAGCTCGGGCGAGGTGGACCGGCTGGTGGCCCAGATCGGCGAGACGCTGCAGCTGGACGCGGCGCAGCACAGCCCGGCCTCGCCGTGCGGGCCCCCGGGGGCGCCGCTGCGGGCCCCGGGGCCCCTGGCTGCGGCGGTGCCGGCGGACAAGGCCAGGTCCCCGGCGGTGCCGCTGCTGCTGCCGCCCGCGTTGGCGGAGACTGTGGGCCCGGCGCCCCCTGGGGTCCTGCGCTGCGCCCTGGGGGACCGCGGCCGCGTGCGGGGCCGCGCTGCGCCCTACTGCGTGGCCGAGCTCGCCACAGGCCCCAGCGCGCTGTCCCCACTGCCCCCTCAGGCCGACCTTGATGGGCCTCCGGGAGCTGGCAAGCAGGGCATCCCGCAGCCGCTGTCGGGTCCGTGCCGGCGAGGATGGCTCCGGGGCGCCGCCGCCTCCCGCCGCCTGCAGCAGCGACGCGGGTCCCAACCAGAAACCCGCACAGGCGACGACGACCCGCACCGGCTTCTGCAGCAGCTAGTGCTCTCTGGAAACCTCATCAAGGAGGCCGTGCGAAGGCTTCATTCGCGACGGCTGCAGTTACGTGCAAAGCTTCCCCAACGCCCGCTCCTGGGACCTCTGTCGGCCCCGGTGCATGAACCCCCTTCGCCTCGCAGCCCTCGCGCGGCCTGCAGTGACCCTGGCGCCTCCGGGAGGGCGCAGCTCAGAACTGGCGACGGCGTTCTTGTGCCTGGCAGCTAACACGCCCGGGGTGGCCACAGCGCCAGCCTCAGACTGGAGGGCAAGGGGTTCCCTTGAGGGCTGCAGTTCTACTCAGGCTGGTGGAGAACTCTGGCTTTTGGAAGCGAGAGTAAAAAGCTAATGACGAGGAACCGAAAAATCGCGAGTGTTTCGCGGGTAACTGGGGTTGAGGGCCAAAATATTTGGAATGAAGGACTTTGGCCCTATTTAAGGCAGATTTTACAGAGCGCACCTCAAACGTACAAGTCAGTAGGACTCCTTATTTGGCGTGACCCGACCTGGCCGCGGAGCCTGCATTTCCTCGCAGCCTCTCAGTGCCCTCCAGCCCCGCGACCATGTGGCCACAATCCACGCTTCTCCGGATCGCGGTGCGCCGGAACCACGGAGGATGATGCCAGTTACTTGCTTTACCTTTTCAGGGCTGGCTCCTGATCCACTTTGGGGGAGGAGAACATGAGTAGATAATTTCAGGGTGCAGCCCAATCTGCCAGACTTAAAAAAACCATCTTGTGTCTTTGGAGGTGCTGCTTAATACCAAACATGCGGTGCCATGAAGGGACCCTTTGGGGGTTGAATAGGAGTTAACCCCTGCGCTCTCTTTGCAACTGTCTCTCTTCTCAGAGTGGTGGGGGAAGGCTGTACGACACGGGTGGGGAAAGGAGGTGGGGGCGGGGAGTATTGAATGGTGGTGGAAGGGTAGAGAGGCGCGGAGTGAACCCCACGCCCTGTCTAAAGTGTATTTTCAGAGCCGGCCCGCCTCTCCTCGGTTCAAGGTCACTGTTTCCTGGGCACGCACTGGGTTGCGGGACAGAGTAGCCAGGTTCTGCCGGTGCTCGGAGAAGAGCGCAGTGTTTTGCAAGTGCTGGAGTCTCCTGAGGACACGCGCGTCGCCGCCACCGCGGGTGTGGGAAAGCGCGGACGTGCTGGGCGGCTGTGCTTCGGTAGGCGACCACCGCCCCTGGCCGCGCTCCGGGCTTTCACGGAAACTCCCGAGACCGGGCCCTGGGTTCCTCCTCTCCTACTCGGCTCTGCAGTCCTACTCAAGCGGGTGGCTCTGGGATCCTGGGGGCCTGGGTTGGGGGCTAGGGAGACGCCATGTGATGGACACTCCAGGGACACACAGCCTAGCACAGCAGCTTATAATGGGCTCTCCGGGGCCATTTGCAATAACAGCTGCAATTCCCTGGATAGACGAGTTGATTTCCTCCCTCTGCCCCTCCCCCAGCCATGCCAGCTGGCCTTTGTAAGTGCAGGAAACCGAGTAGAAAATGTGACCCTCCAAATGGAGAAGCTGCAGGCTTTGCCATTGTGAACCATGGTGAAGTGCTTGGAACATACTGTTCACTCACTCTAAAGGCGCTGAGACTGTGCTGTTGTTCTCGTTTTTATAGTCAATGGCTTGTTCATCATCCAGATGTGGCTACTGACATATCTACACTTCGCACCGGAGTGTCTGGAATTGTGGCTATCCTGATTATAGGATTTTAACTTAACTGAAATGCCTGCTTTGAATAAATGTGTTGGGTTTTTTGTTTGGTTTTATTTTATACTTGCCATCAGTGAAAAAGATGTACAGAACACATTTCTCTGATCTCCATAAACATGAAAACACTTGAAATCTC"
 }



* TEST OF THE 5th ENDPOINT (geneInfo) when working properly:
 1)   INPUT: http://localhost:8080/geneInfo?gene_name=FRAT1&json=1
      OUTPUT IN BROWSER:
 {
    "gene_name": "FRAT1",
    "id": "ENSG00000165879",
    "length": 2645,
    "name": "GRCh38",
    "start": "97319271",
    "end": "97321915"
 }
      OUTPUT IN TERMINAL: The requested json is the following: (identical json to the previous one but printed in terminal).

 2)   We run the client.
      OUTPUT IN TERMINAL:

 /geneInfo
 Response received!:  200 OK
 {
     "end": "97321915",
     "gene_name": "FRAT1",
     "id": "ENSG00000165879",
     "length": 2645,
     "name": "GRCh38",
     "start": "97319271"
 }



* TEST OF THE 6th ENDPOINT (geneCalc) when working properly:
 1)   INPUT: http://localhost:8080/geneCalc?gene_name=FRAT1&json=1
      OUTPUT IN BROWSER:

 {
    "gene_name": "FRAT1",
    "len_sequence_gene": 2645,
    "sequence_percentage_gene": {
        "A": "18.03%",
        "C": "30.21%",
        "G": "32.1%",
        "T": "19.66%"
    }
 }

     OUTPUT IN TERMINAL: The requested json is the following: (identical json to the previous one but printed in terminal).

 2)   We run the client.
      OUTPUT IN TERMINAL:

 /geneCalc
 Response received!:  200 OK
 {
    "gene_name": "FRAT1",
    "len_sequence_gene": 2645,
    "sequence_percentage_gene": {
        "A": "18.03%",
        "C": "30.21%",
        "G": "32.1%",
        "T": "19.66%"
    }
 }

   TEST OF ALL THE ENDPOINTS WHEN LAUNCHING EXCEPTIONS:
                             -------------------------
 * TEST OF THE 1st ENDPOINT (listSpecies) when we get any EXCEPTION:

 A) When we do not write any limit:

 INPUT: http://localhost:8080/listSpecies?limit=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint (Check you introduced a limit also!"
 }

 B) When we write a different number instead of 1:

 INPUT: http://localhost:8080/listSpecies?limit=10&json=5

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 C) When we fail in writing any of the words:

 INPUT: http://localhost:8080/listSpecies?limhit=10&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint (Check you introduced a limit also!"
 }



* TEST OF THE 2nd ENDPOINT (karyotype) when we get any EXCEPTION:

 A) When we do not write any species:

 INPUT: http://localhost:8080/karyotype?species=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint. Check you have provided the name of a species"
 }

 B) When we write a different number instead of 1:

 INPUT: http://localhost:8080/karyotype?species=mouse&json=6

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 C) When we fail in writing any of the words:

 INPUT: http://localhost:8080/karyotype?speces=mouse&json=6

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint. Check you have provided the name of a species"
 }

* TEST OF THE 3rd ENDPOINT (chromosome_length) when we get any EXCEPTION:

 A) When we do not write any species:

 INPUT: http://localhost:8080/chromosome_length?species=&length=18&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }

 B) When we do not write any chromosome:

 INPUT: http://localhost:8080/chromosome_length?species=mouse&length=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }

 C) When we write a different number instead of 1:

 INPUT: http://localhost:8080/chromosome_length?species=mouse&length=18&json=7

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 D) When we fail in writing any of the words:

 INPUT: http://localhost:8080/chromosome_length?species=mouse&lenghh=18&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }


* TEST OF THE 4th ENDPOINT (geneSeq) when we get any EXCEPTION:

A) When we do not write any gene:

 INPUT: http://localhost:8080/geneSeq?gene_name=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }

 B) When we write a different number instead of 1:

 INPUT: http://localhost:8080/geneSeq?gene_name=FRAT1&json=4

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 C) When we fail in writing any of the words:

 INPUT: http://localhost:8080/geneSeq?geneame=FRAT1&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }



* TEST OF THE 5th ENDPOINT (geneInfo) when we get any EXCEPTION:

A) When we do not write any gene:

 INPUT: http://localhost:8080/geneInfo?gene_name=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }

 B) When we write a different number instead of 1:

 INPUT: http://localhost:8080/geneInfo?gene_name=FRAT1&json=3

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 C) When we fail in writing any of the words:

 INPUT: http://localhost:8080/geneInfo?gene_nme=FRAT1&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }



* TEST OF THE 6th ENDPOINT (geneCalc) when we get any EXCEPTION:

A) When we do not write any gene:

 INPUT: http://localhost:8080/geneCalc?gene_name=&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }

 B) When we write a different number instead of 1:

 INPUT: http://localhost:8080/geneCalc?gene_name=FRAT1&json=7

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "json argument must be 1 to return json output"
 }

 C) When we fail in writing any of the words:

 INPUT: http://localhost:8080/geneCalc?gene_me=FRAT1&json=1

 OUTPUT IN THE 3 OPTIONS:

 {
    "ERROR": "endpoint arguments are not correct for this endpoint"
 }


